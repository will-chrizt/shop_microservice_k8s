# kubernetes/nginx-proxy-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-nginx-proxy
  labels:
    app: ecommerce-nginx-proxy
spec:
  replicas: 1 # Start with 1 replica, scale as needed
  selector:
    matchLabels:
      app: ecommerce-nginx-proxy
  template:
    metadata:
      labels:
        app: ecommerce-nginx-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:stable-alpine # Using a standard NGINX image
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz # Use a specific health check endpoint
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config # Reference the ConfigMap created above
---
# kubernetes/nginx-proxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-nginx-proxy-service
  labels:
    app: ecommerce-nginx-proxy
spec:
  type: NodePort # Changed from LoadBalancer for local clusters
  selector:
    app: ecommerce-nginx-proxy
  ports:
    - protocol: TCP
      port: 80        # Port the service listens on inside the cluster
      targetPort: 80  # Port the NGINX container listens on
      nodePort: 30080 # Optional: You can specify a port between 30000-32767.
                      # If omitted, Kubernetes will assign one dynamically.